import React, { useEffect, useState } from "react";
import { makeStyles } from "@material-ui/core/styles";
import AppBar from "@material-ui/core/AppBar";
import CssBaseline from "@material-ui/core/CssBaseline";
import Toolbar from "@material-ui/core/Toolbar";
import Typography from "@material-ui/core/Typography";
import IconButton from "@material-ui/core/IconButton";
import Paper from "@material-ui/core/Paper";
import Fab from "@material-ui/core/Fab";
import List from "@material-ui/core/List";
import ListItem from "@material-ui/core/ListItem";
import ListItemAvatar from "@material-ui/core/ListItemAvatar";
import ListItemText from "@material-ui/core/ListItemText";
import ListSubheader from "@material-ui/core/ListSubheader";
import Avatar from "@material-ui/core/Avatar";
import AddIcon from "@material-ui/icons/Add";
import ButtonGroup from "@material-ui/core/ButtonGroup";
import DeleteIcon from "@material-ui/icons/Delete";
import EditIcon from "@material-ui/icons/Edit";

import photo1 from "../../assets/images/user-profile/faces/kendall.jpg";
import AnswerLikeSection from "./AnswerLikeSection";
import AddComment from "./AddComment";

import { useDispatch, useSelector } from "react-redux";
import { getAnswers } from "../../_actions/forum_actions";

const messages = [
  {
    id: 1,
    primary: "Jonny Keila",
    secondary:
      "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    person: photo1,
  },
  {
    id: 2,
    primary: "Christian Paul",
    secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    person: photo1,
  },
  {
    id: 3,
    primary: "Jonny Bairstow",
    secondary:
      "I am try out this new BBQ recipe, I think this might be amazing",
    person: photo1,
  },
  {
    id: 4,
    primary: "Daniel Jack",
    secondary: "I have the tickets to the ReactConf for this year.",
    person: "/static/images/avatar/3.jpg",
  },
  {
    id: 5,
    primary: "Keizer Reed",
    secondary:
      "My appointment for the doctor was rescheduled for next Saturday.",
    person: "/static/images/avatar/4.jpg",
  },
  {
    id: 6,
    primary: "Dareen Bravow",
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    person: photo1,
  },
  {
    id: 7,
    primary: "Suniel Seilar",
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    person: photo1,
  },
];

const useStyles = makeStyles((theme) => ({
  text: {
    padding: theme.spacing(2, 2, 0),
  },
  paper: {
    paddingBottom: 50,
  },
  list: {
    marginBottom: theme.spacing(2),
  },
  subheader: {
    backgroundColor: theme.palette.background.paper,
  },
  appBar: {
    top: "auto",
    bottom: 0,
  },
  grow: {
    flexGrow: 1,
  },
  fabButton: {
    position: "absolute",
    zIndex: 1,
    top: -30,
    left: 0,
    right: 0,
    margin: "0 auto",
  },
}));

export default function CommentSection(props) {
  const classes = useStyles();
  console.log(props);
  const forum = useSelector((state) => state.forum);
  const dispatch = useDispatch();
  useEffect(() => {
    dispatch(getAnswers());
  }, []);

  return (
    <React.Fragment>
      <CssBaseline />
      <Paper square className={classes.paper}>
        <Typography className={classes.text} variant="h5" gutterBottom>
          Answers
        </Typography>
        <List className={classes.list}>
          {forum.answers.map((answer) => (
            props.question_id === answer.question_id ? (
              <React.Fragment key={answer.question_id}>
                <ListItem>
                  <ListItemAvatar>
                    <Avatar alt="Profile Picture" src={answer.profile_picture} />
                  </ListItemAvatar>
                  <ListItemText primary={answer.first_name + " " + answer.last_name } secondary={answer.answer} />
                  <AnswerLikeSection />
                  <ButtonGroup
                    color="primary"
                    aria-label="outlined primary button group"
                  >
                    <IconButton aria-label="delete">
                      <DeleteIcon />
                    </IconButton>
                    <IconButton aria-label="edit">
                      <EditIcon />
                    </IconButton>
                  </ButtonGroup>
                </ListItem>
              </React.Fragment>
            ) : (
              <div></div>
            )
          ))}
        </List>
      </Paper>
      <AppBar position="relative" color="Primary" className={classes.appBar}>
        <Toolbar>
          <AddComment />
          <div className={classes.grow} />
        </Toolbar>
      </AppBar>
    </React.Fragment>
  );
}
